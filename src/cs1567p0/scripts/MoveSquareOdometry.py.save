#!/usr/bin/env python
import rospy
from std_msgs.msg import *
from nav_msgs.msg import *
from geometry_msgs.msg import *
from cs1567p0.srv import *


def odometry_callback(data):
    command = Twist()
    send_command = rospy.ServiceProxy('constant_command', ConstantCommand)

        if(forward):
            if(data.pose.pose.position.x < 1.0):
                command.linear.x = 0.3
            else:
                print "In x !< 1"
                command.linear.x = 0.0
                next = True
                
        else:
            print "In not Forward"
            if(data.pose.pose.orientation.z < 150.0):
                print "In z < .2"
                command.angular.z = 0.3
            else:
                print "In z !< .2"
                command.angular.z = 0.0
                next = True
        
        if(next):
            print "In Next  FORWARD:"
            print forward 
            forward = not forward
            print forward
            count = count + 1
            pub.publish(Empty())
#            data.pose.pose.orientation = 0.0
#            data.pose.pose.position = 0.0
            next = False
            
        send_command(command)
    else:
        print "In Big Else"
        command.angular.z = 0.0
        command.linear.x = 0.0
        send_command(command)
    
def initialize():
    pub = rospy.Publisher('/mobile_base/commands/reset_odometry', Empty, queue_size=10)
    rospy.Subscriber('/odom', Odometry, odometry_callback)
    rospy.init_node('MoveSquareOdometry', anonymous=True)
    rospy.wait_for_service('constant_command')
    while (pub.get_num_connections() < 1):
    	rospy.sleep(0.1)
    pub.publish(Empty())
    rospy.spin()
    forward = True
    count = 0
    next = False


if __name__ == "__main__":
    initialize()

